# set up drives and mount them
---
- name: yum install anticipated packages for building/running swift
  yum: name={{ item }} state=present
  with_items:
    - openssl-devel
    - rsync
    - xfsprogs
    - git-core
    - python-devel
    - libffi-devel
    - libxml2-devel
    - libxml2
    - libxslt-devel
  when: ansible_os_family == 'RedHat'

- name: apt install anticipated packages for building/running swift
  apt: name={{ item }} state=present
  with_items:
    - liberasurecode-dev
    - libssl-dev
    - rsync
    - xfsprogs
    - git-core
    - build-essential
    - python-dev
    - libffi-dev
    - libxml2-dev
    - libxml2
    - libxslt1-dev
  when: ansible_os_family == 'Debian'

- name: delete ubuntu user
  user:
    name: ubuntu
    remove: yes
    state: absent

- name: Create swift group
  group:
    name: swift
    state: present
  register: swiftgroupcreated


- name: Create swift user
  when: swiftgroupcreated|success
  user:
    name: swift
    group: swift
    # password is "password"
    password: $6$EgUVKk/vDpZbfJ$gtzFx.iN.iVbglXGBWaOeptejT3phyjmQWW.YeX5F75EMuNzqvOh1icDOHUlYapBiXna4pVNK5Zg6ZYPraXRm/
    shell: /bin/bash
  register: swiftusercreated


- name: Add swift user to sudo group
  user:
    name: swift
    groups: sudo
    append: yes
  when: swiftgroupcreated|success and ansible_os_family == 'Debian'


- name: Add swift user to wheel group
  user:
    name: swift
    groups: wheel
    append: yes
  when: swiftgroupcreated|success and ansible_os_family == 'RedHat'

- name: Check components dir exists
  stat:
    path: /root/components
  register: components_stat

- name: Sync components directory to /home/swift/code
  synchronize:
    src: /root/components/
    dest: /home/swift/code/
    delete: yes
    checksum: yes
    archive: yes
    compress: no
    recursive: yes
    rsync_opts:
      - "--exclude=*.pyc"
      - "--exclude=*.egg-info"
  when: components_stat.stat.exists and (no_install is undefined or not no_install)

- name: Make sure swift user's home directory is owned by swift
  file:
    path: /home/swift
    owner: swift
    group: swift
    recurse: yes

- name: Make filesystems on disks
  register: filesystemscreated
  with_items:
    - sdb
    - sdc
    - sdd
    - sde
    - sdf
    - sdg
    - sdh
    - sdi
  filesystem:
    fstype: xfs
    dev: /dev/{{ item }}
    force: no

- name: Create directories to mount disks
  file:
    path: "{{item}}"
    state: directory
  with_items:
    - '/srv/1/node/d1'
    - '/srv/2/node/d2'
    - '/srv/3/node/d3'
    - '/srv/4/node/d4'
    - '/srv/1/node/d5'
    - '/srv/2/node/d6'
    - '/srv/3/node/d7'
    - '/srv/4/node/d8'

- name: Update fstab
  register: fstab_update
  when: filesystemscreated|success
  with_items:
    - { drive: sdb, mp: /srv/1/node/d1 }
    - { drive: sdc, mp: /srv/2/node/d2 }
    - { drive: sdd, mp: /srv/3/node/d3 }
    - { drive: sde, mp: /srv/4/node/d4 }
    - { drive: sdf, mp: /srv/1/node/d5 }
    - { drive: sdg, mp: /srv/2/node/d6 }
    - { drive: sdh, mp: /srv/3/node/d7 }
    - { drive: sdi, mp: /srv/4/node/d8 }
  mount:
    path: "{{ item.mp }}"
    src: /dev/{{ item.drive }}
    fstype: xfs
    state: mounted
    opts: auto,noatime,nodiratime,logbufs=2

- name: Mount disks
  register: drivesmounted
  command: mount -a
  when: fstab_update|success
  args:
    warn: no

- name: Set permissions
  register: permissionsset
  when: drivesmounted|success and swiftusercreated|success
  with_items:
    - /srv/1
    - /srv/2
    - /srv/3
    - /srv/4
  file:
    recurse: yes
    owner: swift
    group: swift
    path: "{{ item }}"
